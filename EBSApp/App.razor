@namespace EBSApp
@using EBSApp.Shared

@inject EBSApp.Models.TokenStore TokenStore
@inject AuthenticationStateProvider AuthStateProvider
@using System.Security.Claims;

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthStateProvider.GetAuthenticationStateAsync();

        Claim? accessToken = authState.User.Claims.ToList().Find(x => x.Type == "accessToken");

        if (accessToken != null)
            TokenStore.AccessToken = accessToken.Value;
    }
}